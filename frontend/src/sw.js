import { precacheAndRoute, createHandlerBoundToURL } from "workbox-precaching"; // Moved createHandlerBoundToURL here
import { registerRoute, NavigationRoute } from "workbox-routing"; // NavigationRoute stays here
import { StaleWhileRevalidate, NetworkFirst } from "workbox-strategies";

// Precache all assets from the manifest (generated by webpack)
precacheAndRoute(self.__WB_MANIFEST || []);

// Runtime caching for fonts (StaleWhileRevalidate for quick loads)
registerRoute(
  /^https:\/\/fonts\.googleapis\.com/,
  new StaleWhileRevalidate({
    cacheName: "google-fonts-stylesheets",
  })
);

// Runtime caching for API (NetworkFirst to prioritize fresh data, fallback to cache offline)
registerRoute(
  /\/todos/,
  new NetworkFirst({
    cacheName: "api-cache",
  })
);

// Handle navigation for SPA: Fallback to cached index.html for all navigation requests (enables offline refresh)
const handler = createHandlerBoundToURL("/index.html");
const navigationRoute = new NavigationRoute(handler, {
  denylist: [/^\/_/, /\/api\//], // Exclude service worker itself or API routes
});
registerRoute(navigationRoute);

// Optional: Skip waiting and claim clients for immediate control
self.addEventListener("install", () => {
  self.skipWaiting();
});
self.addEventListener("activate", () => {
  self.clients.claim();
});
